"use strict";const t=250,n=240;let r={delay:t,maxTry:n,until:null};function e(){return Object.assign({},r)}function i(t,n,r,e){return new(r||(r=Promise))((function(i,o){function u(t){try{c(e.next(t))}catch(t){o(t)}}function s(t){try{c(e.throw(t))}catch(t){o(t)}}function c(t){var n;t.done?i(t.value):(n=t.value,n instanceof r?n:new r((function(t){t(n)}))).then(u,s)}c((e=e.apply(t,n||[])).next())}))}"function"==typeof SuppressedError&&SuppressedError;const o=t=>()=>new Promise(((n,r)=>{try{n(t())}catch(t){r(t)}}));let u=6e4;function s(t=u){return new Promise((n=>setTimeout(n,t)))}function c(t,n=u,r=new d("function did not complete within allowed time")){return i(this,void 0,void 0,(function*(){const e=Symbol("DELAY_EXPIRED"),i=yield Promise.race([t(),l(n,e)]);if(i===e)throw r;return i}))}const l=(t,n)=>i(void 0,void 0,void 0,(function*(){return yield s(t),n}));class d extends Error{constructor(){super(...arguments),this.isTimeout=!0}}function y(n){return void 0===n?()=>t:"function"==typeof n?n:()=>n}class a extends Error{constructor(t=void 0){super("function did not complete within allowed number of attempts"),this.lastResult=t,this.tooManyTries=!0}getLastResult(){return this.lastResult}}function f(t){return!0===t.tooManyTries}function v(t,n){return i(this,void 0,void 0,(function*(){const r=o(t);return yield p(r,n)}))}function p(t,r){return i(this,void 0,void 0,(function*(){const i=function(t,r){const i=Object.assign(Object.assign({},e()),r);return Object.assign(Object.assign({},i),{currentTry:t,maxTry:i.maxTry||n,delay:y(i.delay),until:i.until?i.until:()=>!0})}(1,r);return yield h(t,i)}))}function h(t,n){return i(this,void 0,void 0,(function*(){const r=n.currentTry<n.maxTry;try{const e=yield t();if(n.until(e))return e;if(r)return yield x(t,n,e);throw new a(e)}catch(e){if(!f(e)&&r)return n.onError&&n.onError(e),yield x(t,n);throw n.onMaxRetryFunc&&n.onMaxRetryFunc(e),e}}))}function x(t,n,r){return i(this,void 0,void 0,(function*(){const e=n.delay({currentTry:n.currentTry,maxTry:n.maxTry,lastDelay:n.lastDelay,lastResult:r});yield s(e);const i=Object.assign(Object.assign({},n),{currentTry:n.currentTry+1});return yield h(t,i)}))}const T=t=>n=>Object.assign(Object.assign({},n),{until:t}),m=T((t=>null!=t));function D(t,n){return i(this,void 0,void 0,(function*(){const r=m(n);return yield p(t,r)}))}const w=T((t=>1==t));function b(t,n){return i(this,void 0,void 0,(function*(){const r=w(n);return yield v(t,r)}))}function g(t,n){return i(this,void 0,void 0,(function*(){const r=w(n);return yield p(t,r)}))}const O=T((t=>t.ok));function R(t,n){return i(this,void 0,void 0,(function*(){const r=O(n);return yield p(t,r)}))}exports.createExponetialDelay=function(t){return({lastDelay:n})=>void 0!==n?n*t:t},exports.createMutiplicableDelay=function(t,n){return({currentTry:r})=>{if(1===r)return t;return t*((r-1)*n)}},exports.createRandomDelay=function(t,n){const r=n-t+1;return()=>Math.floor(Math.random()*r+t)},exports.getDefaultDuration=function(){return u},exports.getDefaultRetryOptions=e,exports.isTimeoutError=function(t){return!0===t.isTimeout},exports.isTooManyTries=f,exports.retry=v,exports.retryAsync=p,exports.retryAsyncUntilDefined=D,exports.retryAsyncUntilDefinedDecorator=function(t,n){return(...r)=>i(this,void 0,void 0,(function*(){return yield D((()=>i(this,void 0,void 0,(function*(){return yield t(...r)}))),n)}))},exports.retryAsyncUntilResponse=R,exports.retryAsyncUntilResponseDecorator=function(t,n){return(...r)=>i(this,void 0,void 0,(function*(){return yield R((()=>i(this,void 0,void 0,(function*(){return yield t(...r)}))),n)}))},exports.retryAsyncUntilTruthy=g,exports.retryAsyncUntilTruthyDecorator=function(t,n){return(...r)=>i(this,void 0,void 0,(function*(){return yield g((()=>i(this,void 0,void 0,(function*(){return yield t(...r)}))),n)}))},exports.retryUntilDefined=function(t,n){return i(this,void 0,void 0,(function*(){const r=m(n);return yield v(t,r)}))},exports.retryUntilTruthy=b,exports.retryUntilTruthyDecorator=function(t,n){return(...r)=>i(this,void 0,void 0,(function*(){return yield b((()=>t(...r)),n)}))},exports.setDefaultDuration=function(t){u=t},exports.setDefaultRetryOptions=function(t){return r=Object.assign(Object.assign({},r),t),e()},exports.wait=s,exports.waitUntil=function(t,n,r){return i(this,void 0,void 0,(function*(){const e=o(t);return yield c(e,n,r)}))},exports.waitUntilAsync=c;
